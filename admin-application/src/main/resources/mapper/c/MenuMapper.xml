<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.cms.dao.c.system.MenuMapper">
    <resultMap id="MenuResultMap" type="com.blog.cms.domain.system.menu.Menu">
        <id column='menu_id' property='id'/>
        <result column='menu_order' property='order'/>
        <result column='menu_number' property='number'/>
        <result column='menu_nodename' property='nodeName'/>
        <result column='menu_nodepath' property='nodePath'/>
        <result column='menu_rootnode' property='rootNode'/>
        <result column='menu_isrootnode' property='isRootNode'/>
        <result column='menu_isleafnode' property='isLeafNode'/>
        <result column='menu_parentnode' property='parentNode'/>
        <result column='menu_parentnodenumber' property='parentNodeNumber'/>
        <result column='menu_createtime' property='createTime'/>
    </resultMap>

    <sql id="Base_Column_List">
        menu_id,menu_order,menu_number,menu_nodename,menu_nodepath,menu_rootnode,menu_isrootnode,menu_isleafnode,menu_parentnode,menu_parentnodenumber,menu_createtime
    </sql>
    <sql id="Where">
        <where>1=1
            <if test="parentNumber !=null">
                and menu_parentnodenumber= #{parentNumber}
            </if>
            <if test="number !=null ">
                and menu_number = #{number}
            </if>
            <if test="isRootNode != null and isRootNode == true">
                AND menu_isrootnode =1
            </if>
            <if test="isRootNode != null and isRootNode == false">
                AND menu_isrootnode =1
            </if>
            <if test="nodeNameContain !=null ">
                and menu_nodename like CONCAT('%',#{nodeNameContain},'%')
            </if>
            <if test="numberIn !=null and numberIn.size()>0 ">
                and menu_number in
                <foreach collection="numberIn" item="number" index="index" open="(" close=")" separator=",">
                #{number}
            </foreach>
            </if>
            <if test="numberIn !=null and numberIn.size()==0 ">
                and 1=0
            </if>
            <if test="parentNumberIn !=null and parentNumberIn.size()>0 ">
                and menu_parentnodenumber in
                <foreach collection="parentNumberIn" item="number" index="index" open="(" close=")" separator=",">
                    #{number}
                </foreach>
            </if>
            <if test="parentNumberIn !=null and parentNumberIn.size()==0 ">
                and 1=0
            </if>
        </where>
    </sql>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.blog.cms.domain.system.menu.Menu">
       insert into SYS_Menu(
        menu_order,
		menu_number,
		menu_nodename,
		menu_nodepath,
		menu_rootnode,
		menu_isrootnode,
		menu_isleafnode,
		menu_parentnode,
		menu_parentnodenumber,
		menu_createtime )
		values
 		(
 		#{order,jdbcType=INTEGER},
		#{number,jdbcType=VARCHAR},
		#{nodeName,jdbcType=VARCHAR},
		#{nodePath,jdbcType=VARCHAR},
		#{rootNode,jdbcType=VARCHAR},
		#{isRootNode,jdbcType=BIT},
		#{isLeafNode,jdbcType=BIT},
		#{parentNode,jdbcType=VARCHAR},
		#{parentNodeNumber,jdbcType=VARCHAR},
		now())
    </insert>
    <update id="update" parameterType="com.blog.cms.domain.system.menu.Menu">
        update  SYS_Menuset
            menu_number = #{order,jdbcType=INTEGER},
			menu_number = #{number,jdbcType=VARCHAR},
			menu_nodename = #{nodeName,jdbcType=VARCHAR},
			menu_nodepath = #{nodePath,jdbcType=VARCHAR},
			menu_rootnode = #{rootNode,jdbcType=VARCHAR},
			menu_isrootnode = #{isRootNode,jdbcType=BIT},
			menu_isleafnode = #{isLeafNode,jdbcType=BIT},
			menu_parentnode = #{parentNode,jdbcType=VARCHAR},
			menu_parentnodenumber = #{parentNodeNumber,jdbcType=VARCHAR},
			menu_createtime = now()
			where menu_id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into SYS_Menu(
        menu_order,
        menu_number,
        menu_nodename,
        menu_nodepath,
        menu_rootnode,
        menu_isrootnode,
        menu_isleafnode,
        menu_parentnode,
        menu_parentnodenumber,
        menu_createtime )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.order,jdbcType=INTEGER},
            #{item.number,jdbcType=VARCHAR},
            #{item.nodeName,jdbcType=VARCHAR},
            #{item.nodePath,jdbcType=VARCHAR},
            #{item.rootNode,jdbcType=VARCHAR},
            #{item.isRootNode,jdbcType=BIT},
            #{item.isLeafNode,jdbcType=BIT},
            #{item.parentNode,jdbcType=VARCHAR},
            #{item.parentNodeNumber,jdbcType=VARCHAR},
            now())
        </foreach>
    </insert>
    <select id="selectCount" parameterType="map" resultType="int">
        select count(*) from SYS_Menu
        <include refid='Where'/>
    </select>
    <select id="select" parameterType="map" resultMap="MenuResultMap">
        select
        <include refid='Base_Column_List'/>
        from SYS_Menu
        <include refid='Where'/>
    </select>
    <select id="selectById" parameterType="INTEGER" resultMap="MenuResultMap">
        select
        <include refid='Base_Column_List'/>
        from SYS_Menu where menu_id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectSingle" parameterType="map" resultMap="MenuResultMap">
        select
        <include refid='Base_Column_List'/>
        from SYS_Menu
        <include refid='Where'/> limit 1
    </select>
    <select id="selectByPage" parameterType="map" resultMap="MenuResultMap">
        select
        <include refid='Base_Column_List'/>
        from SYS_Menu
        <include refid='Where'/>
         limit #{currentPage},#{pageSize}
    </select>
    <delete id="deleteById" parameterType="int">
         delete  from SYS_Menu where menu_id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="delete" parameterType="map">
         delete  from SYS_Menu
          <include refid='Where'/>
    </delete>
</mapper>
